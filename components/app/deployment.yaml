apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: 2.9.2
  name: kube-state-metrics
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: 2.9.2
    spec:
      automountServiceAccountToken: true
      containers:
      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.9.2
        args:
          - "--resources=pods,cronjobs,daemonsets,deployments,endpoints,ingresses,jobs,namespaces,nodes,persistentvolumeclaims,persistentvolumes,replicasets,services,statefulsets"
          # - "--metric-labels-allowlist=pods=[*],cronjobs=[*],daemonsets=[*],deployments=[*],endpoints=[*],ingresses=[*],jobs=[*],namespaces=[*],nodes=[*],replicasets=[*],services=[*],statefulsets=[*]"
          - "--metric-denylist=kube_replicaset_status_observed_generation,Kube_replicaset_status_fully_labeled_replicas,Kube_replicaset_metadata_generation,kube_secret_type,kube_pod_ips,kube_pod_restart_policy,kube_pod_owner,kube_pod_status_scheduled_time,kube_pod_annotations,kube_pod_owner,kube_pod_labels,kube_deployment_labels,kube_deployment_annotations,"
          # - "--resources=pods,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,verticalpodautoscalers,volumeattachments"
          # - "--metric-labels-allowlist=certificatesigningrequests=[*],cronjobs=[*],daemonsets=[*],deployments=[*],endpoints=[*],horizontalpodautoscalers=[*],ingresses=[*],jobs=[*],namespaces=[*],networkpolicies=[*],nodes=[*],persistentvolumes=[*],persistentvolumeclaims=[*],poddisruptionbudgets=[*],replicasets=[*],secrets=[*],services=[*],statefulsets=[*],storageclasses=[*],verticalpodautoscalers=[*],volumeattachments=[*]"
          # - "--metric-denylist=kube_replicaset_status_observed_generation,Kube_replicaset_status_fully_labeled_replicas,Kube_replicaset_metadata_generation,kube_secret_type"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 8081
          name: telemetry
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kube-state-metrics
